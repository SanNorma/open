buildscript {
    ext.kotlinVersion = '1.3.50'
    ext.swaggerVersion = "2.9.2"
    ext.javafakerVersion = "1.0.1"
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlinVersion"
    }
}
plugins {
    id 'java'
    id 'org.springframework.boot' version '2.2.0.RELEASE'
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: "kotlin-jpa"
apply plugin: "kotlin-allopen"
apply plugin: 'io.spring.dependency-management'

group = 'com.tradesystem'
version = '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    //spring
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    //swagger
    implementation "io.springfox:springfox-swagger2:${swaggerVersion}"
    implementation "io.springfox:springfox-swagger-ui:${swaggerVersion}"

    //kotlin
    compile 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    compile 'org.jetbrains.kotlin:kotlin-reflect'
    compile 'com.fasterxml.jackson.module:jackson-module-kotlin'

    //lombok
    implementation "org.projectlombok:lombok"
    annotationProcessor "org.projectlombok:lombok"
    testAnnotationProcessor "org.projectlombok:lombok"

    //database
    runtime "com.h2database:h2"

    //fake data
    implementation "com.github.javafaker:javafaker:${javafakerVersion}"

    //test
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

test {
    useJUnitPlatform()
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "12"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "12"
    }
}

allOpen {
    annotation("javax.persistence.Entity")
    annotation("javax.persistence.MappedSuperclass")
    annotation("javax.persistence.Embeddable")
}
